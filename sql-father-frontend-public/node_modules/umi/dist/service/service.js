var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// service.ts
var service_exports = {};
__export(service_exports, {
  Service: () => Service
});
module.exports = __toCommonJS(service_exports);
var import_core = require("@umijs/core");
var import_fs = require("fs");
var import_path = require("path");
var import_constants = require("../constants");
var import_cwd = require("./cwd");
var Service = class extends import_core.Service {
  constructor(opts) {
    process.env.UMI_DIR = (0, import_path.dirname)(require.resolve("../../package"));
    const cwd = (0, import_cwd.getCwd)();
    require("./requireHook");
    super(__spreadProps(__spreadValues({}, opts), {
      env: process.env.NODE_ENV,
      cwd,
      defaultConfigFiles: import_constants.DEFAULT_CONFIG_FILES,
      frameworkName: import_constants.FRAMEWORK_NAME,
      presets: [require.resolve("@umijs/preset-umi"), ...(opts == null ? void 0 : opts.presets) || []],
      plugins: [
        (0, import_fs.existsSync)((0, import_path.join)(cwd, "plugin.ts")) && (0, import_path.join)(cwd, "plugin.ts"),
        (0, import_fs.existsSync)((0, import_path.join)(cwd, "plugin.js")) && (0, import_path.join)(cwd, "plugin.js")
      ].filter(Boolean)
    }));
  }
  async run2(opts) {
    let name = opts.name;
    if ((opts == null ? void 0 : opts.args.version) || name === "v") {
      name = "version";
    } else if ((opts == null ? void 0 : opts.args.help) || !name || name === "h") {
      name = "help";
    }
    return await this.run(__spreadProps(__spreadValues({}, opts), { name }));
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Service
});
