var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// jest.ts
var jest_exports = {};
__export(jest_exports, {
  default: () => jest_default
});
module.exports = __toCommonJS(jest_exports);
var import_core = require("@umijs/core");
var import_utils = require("@umijs/utils");
var import_fs = require("fs");
var import_path = require("path");
var import_utils2 = require("./utils");
var jest_default = (api) => {
  api.describe({
    key: "generator:jest"
  });
  api.registerGenerator({
    key: "jest",
    name: "Enable Jest",
    description: "Setup Jest Configuration",
    type: import_core.GeneratorType.enable,
    checkEnable: () => {
      return !(0, import_fs.existsSync)((0, import_path.join)(api.paths.cwd, "jest.config.ts")) && !(0, import_fs.existsSync)((0, import_path.join)(api.paths.cwd, "jest.config.js"));
    },
    disabledDescription: "jest has already enabled. You can remove jest.config.{ts,js}, then run this again to re-setup.",
    fn: async () => {
      const h = new import_utils2.GeneratorHelper(api);
      const res = await (0, import_utils2.promptsExitWhenCancel)({
        type: "confirm",
        name: "willUseTLR",
        message: "Will you use @testing-library/react for UI testing?!",
        initial: true
      });
      const basicDeps = {
        jest: "^27",
        "@types/jest": "^27",
        typescript: "^4",
        "ts-node": "^10"
      };
      const packageToInstall = res.willUseTLR ? __spreadProps(__spreadValues({}, basicDeps), {
        "@testing-library/react": "^13",
        "@testing-library/jest-dom": "^5.16.4",
        "@types/testing-library__jest-dom": "^5.14.5"
      }) : basicDeps;
      h.addDevDeps(packageToInstall);
      h.addScript("test", "jest");
      if (res.willUseTLR) {
        (0, import_fs.writeFileSync)((0, import_path.join)(api.cwd, "jest-setup.ts"), `import '@testing-library/jest-dom';
          `.trimLeft());
        import_utils.logger.info("Write jest-setup.ts");
      }
      const importSource = api.appData.umi.importSource;
      (0, import_fs.writeFileSync)((0, import_path.join)(api.cwd, "jest.config.ts"), `
import { Config, configUmiAlias, createConfig } from '${importSource}/test';

export default async () => {
  return (await configUmiAlias({
    ...createConfig({
      target: 'browser',
    }),
    ${res.willUseTLR ? `setupFilesAfterEnv: ['<rootDir>/jest-setup.ts'],` : ""}
    // if you require some es-module npm package, please uncomment below line and insert your package name
    // transformIgnorePatterns: ['node_modules/(?!.*(lodash-es|your-es-pkg-name)/)']
  })) as Config.InitialOptions;
};
`.trimLeft());
      import_utils.logger.info("Write jest.config.ts");
      h.installDeps();
    }
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
